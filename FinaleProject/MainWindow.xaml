<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FinaleProject"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="FinaleProject.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="483.6" Width="860.8" WindowStyle="None" >
    <Window.Resources>
        <Style TargetType="{x:Type Grid}" x:Key="Hover">
            <Setter Property="Background" Value="#FF009CDF"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#FF005073"/>
                </Trigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="tabButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
        </Style>
        <Style x:Key="customButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type Button}">
                        <Grid />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid >
                            <Rectangle x:Name="rectangle" RadiusY="9.3" RadiusX="9" >
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                        <GradientStop Color="#FFD1D1D1" Offset="1"/>
                                        <GradientStop Color="#FFE0E0E0"/>
                                        <GradientStop Color="#FEFDFDFD" Offset="0.374"/>
                                        <GradientStop Color="#FEF1F1F1" Offset="0.696"/>
                                        <GradientStop Color="#FEFFFFFF" Offset="0.516"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter x:Name="contentPresenter" Width="{TemplateBinding Width}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FFD1D1D1" Offset="1"/>
                                            <GradientStop Color="#FFE8E8E8" Offset="0.003"/>
                                            <GradientStop Color="#FEFDFDFD" Offset="0.374"/>
                                            <GradientStop Color="#FEF1F1F1" Offset="0.696"/>
                                            <GradientStop Color="#FEFFFFFF" Offset="0.516"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Stroke" TargetName="rectangle" Value="#FF89AD87"/>
                                <Setter Property="StrokeThickness" TargetName="rectangle" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Effect" TargetName="rectangle">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="0" Color="#FF89AD87" Direction="0" Opacity="0.91" ShadowDepth="1"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="rectangle" Value="#FFC2C2C2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowsClose" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid" HorizontalAlignment="Left" Height="{TemplateBinding Height}" VerticalAlignment="Top" Width="{TemplateBinding Width}">
                            <Ellipse x:Name="ellipse" HorizontalAlignment="Left" Height="{TemplateBinding Height}" Stroke="{x:Null}" VerticalAlignment="Top" Width="{TemplateBinding Width}" Fill="{TemplateBinding Background}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="ellipse" Value="#FFA2A2A2"/>
                                <Setter Property="Background" TargetName="grid" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="ellipse" Value="#FF494949"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="closeButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="25"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF8C8C8C"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF383838"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="applyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                <Setter Property="Background" TargetName="border" Value="#FF0AB05F"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="OpacityMask" TargetName="contentPresenter" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                <Setter Property="Background" TargetName="border" Value="#FF03A277"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                <Setter Property="Background" TargetName="border" Value="#FF07893C"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="35"/>
    </WindowChrome.WindowChrome>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.5*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Mainform" Grid.ColumnSpan="3">
            <Grid.Background>
                <LinearGradientBrush EndPoint="435,97" StartPoint="421,-54" MappingMode="Absolute">
                    <GradientStop Color="#FF8B8B8B" Offset="0"/>
                    <GradientStop Color="#FF424242" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>
            <StackPanel WindowChrome.IsHitTestVisibleInChrome="True"  Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                <Button Content="Button"  Height="15" VerticalAlignment="Center" Width="15" Style="{DynamicResource closeButton}"     Margin="5"  BorderBrush="{x:Null}" Background="#FF939292" Click="minimize"/>
                <Button Content="Button"  Height="15" VerticalAlignment="Center" Width="15" Style="{DynamicResource closeButton}" Margin="5"  BorderBrush="{x:Null}" Background="#FF939292" Click="maximize"/>
                <Button Content="Button"  Height="15" VerticalAlignment="Center" Width="15" Style="{DynamicResource closeButton}" Margin="5"  BorderBrush="{x:Null}" Background="#FF939292" Click="close"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="2" >
            <Grid.Background>
                <ImageBrush Stretch="UniformToFill" ImageSource="670.jpg"/>
            </Grid.Background>
            <TextBlock x:Name="about" Margin="30" Padding="20" HorizontalAlignment="Center" TextWrapping="Wrap" Text="Japan International Cooperation Agency (JICA) Technical Assistance (T/A) task team for Energy Efficiency &amp; Conservation Promotion Financing Project, managed by Mitsubishi Research Institute, Inc., is seeking proposals for services as stipulated in the attached requirement definition document.  The proposals are expected to be submitted from at least three ICT system developers situated in Dhaka, having experiences of developing and supplying business process management application software. " VerticalAlignment="Center" FontSize="14" FontFamily="Source Sans Pro ExtraLight" Foreground="#FF090909" Background="#FFEAEAEA" Opacity="0.7" FontWeight="Bold"/>
            <TextBlock x:Name="typeA" Margin="30" Padding="20"  HorizontalAlignment="Center" TextWrapping="Wrap" Text="Japan International Cooperation Agency (JICA) Technical Assistance (T/A) task team for Energy Efficiency &amp; Conservation Promotion Financing Project, managed by Mitsubishi Research Institute, Inc., is seeking proposals for services as stipulated in the attached requirement definition document.  The proposals are expected to be submitted from at least three ICT system developers situated in Dhaka, having experiences of developing and supplying business process management application software. Japan International Cooperation Agency (JICA) Technical Assistance (T/A) task team for Energy Efficiency &amp; Conservation Promotion Financing Project, managed by Mitsubishi Research Institute, Inc., is seeking proposals for services as stipulated in the attached requirement definition document.  The proposals are expected to be submitted from at least three ICT system developers situated in Dhaka, having experiences of developing and supplying business process management application software. " VerticalAlignment="Center"  Visibility="Hidden" Background="#FFEAEAEA" Opacity="0.7"/>
            <TextBlock x:Name="typeB" Margin="30" Padding="20"  HorizontalAlignment="Center" TextWrapping="Wrap" Text="Japan International Cooperation Agency (JICA) Technical Assistance (T/A) task team for Energy Efficiency &amp; Conservation Promotion Financing Project, managed by Mitsubishi Research Institute, Inc., is seeking proposals for services as stipulated in the attached requirement definition document.  The proposals are expected to be submitted from at least three ICT system developers situated in Dhaka, having experiences of developing and supplying business process management application software. Japan International Cooperation Agency (JICA) Technical Assistance (T/A) task team for Energy Efficiency &amp; Conservation Promotion Financing Project, managed by Mitsubishi Research Institute, Inc., is seeking proposals for services as stipulated in the attached requirement definition document.  The proposals are expected to be submitted from at least three ICT system developers situated in Dhaka, having experiences of developing and supplying business process management application software. " VerticalAlignment="Center"  Visibility="Hidden" Background="#FFEAEAEA" Opacity="0.7"/>
            <Button x:Name="apply_A" Content="Apply for A type Loan " Margin="30" HorizontalAlignment="Right"  VerticalAlignment="Bottom" Width="auto" Background="#FF279F2D" BorderBrush="{x:Null}" Foreground="White" Style="{DynamicResource applyButtonStyle}" Click="apply_A_Click" Opacity="0.7" Height="25" Padding="2"/>
            <Button x:Name="apply_B" Content="Apply for B type Loan " Margin="0,0,30,30.2" HorizontalAlignment="Right"  VerticalAlignment="Bottom" Click="apply_B_Click" Background="#FF07997C" Foreground="White" Height="25" Style="{DynamicResource applybuttonb}" Visibility="Hidden">
                <Button.Resources>
                    <Style x:Key="applybuttonb" TargetType="{x:Type Button}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                            <Setter Property="Background" TargetName="border" Value="#FF089738"/>
                                            <Setter Property="OpacityMask" TargetName="contentPresenter" Value="Black"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                            <Setter Property="Background" TargetName="border" Value="#FF089757"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                            <Setter Property="Background" TargetName="border" Value="#FF008832"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>
        <Grid Grid.Row="1"  Grid.RowSpan="2" d:IsEffectDisabled="True">
            <Grid.Background>
                <LinearGradientBrush EndPoint="8,1" StartPoint="-2,0">
                    <GradientStop Color="#FF3D3D3D" Offset="0.194"/>
                    <GradientStop Color="#FFB7B7B7" Offset="0.637"/>
                    <GradientStop Color="#FF143046" Offset="0.379"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid x:Name="About" Style="{StaticResource Hover}" Grid.Row="1"  Margin="0.25" MouseEnter="About_MouseEnter"  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="aSelected" Background="#FF005073"  />
                <TextBlock HorizontalAlignment="Center"  TextWrapping="Wrap" Text="ABOUT" VerticalAlignment="Center" Foreground="#FFF4F4F4" Grid.Column="1" FontWeight="Bold" FontSize="16" />
            </Grid>
            <Grid x:Name="LoneType_A" Style="{StaticResource Hover}" Grid.Row="2"  Margin="0.25" MouseEnter="LoneType_A_MouseEnter" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="ASelected" Background="#FF005073" Visibility="Hidden"  />


                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="LONE TYPE A" VerticalAlignment="Center" Foreground="#FFF0F0F0" Grid.Column="1" FontSize="16" FontWeight="Bold" />
            </Grid>
            <Grid x:Name="LoneType_B" Style="{StaticResource Hover}" Grid.Row="3"  Margin="0.25" MouseEnter="LoneType_B_MouseEnter"  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="BSelected" Background="#FF005073" Visibility="Hidden"  />
                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="LONE TYPE B" VerticalAlignment="Center" Foreground="#FFE7E7E7" Grid.Column="1" FontSize="16" FontWeight="Bold" />
            </Grid>
            <TextBlock HorizontalAlignment="Center"  TextWrapping="Wrap" Text="JICA"  VerticalAlignment="Center" FontSize="48" FontFamily="Segoe UI Black" FontWeight="Bold" Foreground="#FFE0E0E0"/>

        </Grid>
        <Grid x:Name="GridSignIn" Grid.Column="2" Grid.Row="2" Background="#FFD9D9D9" >
            <Grid.Effect>
                <DropShadowEffect BlurRadius="18" Direction="0" ShadowDepth="0" Color="#FFBDBDBD"/>
            </Grid.Effect>
            <StackPanel  VerticalAlignment="Center" >
                <StackPanel Orientation="Horizontal" Margin="20" Height="auto" >
                    <Button x:Name="signin" Content="Button" HorizontalAlignment="Left" Height="auto" VerticalAlignment="Top" Width="59" Style="{DynamicResource ButtonStyleSignIn}" Click="signin_Click" Foreground="{x:Null}" BorderBrush="{x:Null}" FontSize="16" FontWeight="Bold">
                        <Button.Resources>
                            <Style x:Key="ButtonStyleSignIn" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border  VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Label Content="SignIn" FontWeight="DemiBold" Foreground="#FF155D10" Background="{x:Null}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true"/>
                                                <Trigger Property="IsMouseOver" Value="true"/>
                                                <Trigger Property="IsPressed" Value="true"/>
                                                <Trigger Property="IsEnabled" Value="false"/>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button x:Name="signUp" Content="Button" HorizontalAlignment="Left" Height="auto" VerticalAlignment="Top" Width="auto" Style="{DynamicResource ButtonStyleSignIn}" Click="signUp_Click" Opacity="0.7" FontSize="16">
                        <Button.Resources>
                            <Style x:Key="ButtonStyleSignIn" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border  VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Label Content="SignUp"  Foreground="#FFFEBC48"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true"/>
                                                <Trigger Property="IsMouseOver" Value="true"/>
                                                <Trigger Property="IsPressed" Value="true"/>
                                                <Trigger Property="IsEnabled" Value="false"/>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
                <Border BorderThickness="0.5" Height="31" Margin="25,0,25,9" CornerRadius="8" VerticalAlignment="Center" Padding="8,0,5,0" >
                    <Border.BorderBrush>
                        <RadialGradientBrush>
                            <GradientStop Color="#FF558A52" Offset="1"/>
                            <GradientStop Color="#FFF0F0F6"/>
                        </RadialGradientBrush>
                    </Border.BorderBrush>
                    <TextBox x:Name="text_username" HorizontalAlignment="Stretch"  TextWrapping="Wrap" Text="_someone@email.com" VerticalAlignment="Center" Width="auto" Background="{x:Null}" BorderThickness="0" BorderBrush="#FF424242" Foreground="#FF626262" MouseLeave="username_Leave" Cursor="IBeam" MouseEnter="username_Enter"/>
                </Border>
                <Border BorderThickness="0.5" Height="30" Margin="25,10,25,9" CornerRadius="8" VerticalAlignment="Center" Padding="8,0,5,0" >
                    <Border.BorderBrush>
                        <RadialGradientBrush>
                            <GradientStop Color="#FF32712D" Offset="1"/>
                            <GradientStop Color="#FFDBDBDB"/>
                        </RadialGradientBrush>
                    </Border.BorderBrush>
                    <PasswordBox x:Name="text_password" HorizontalAlignment="Stretch"    VerticalAlignment="Center" Width="auto" Background="{x:Null}" BorderThickness="0" BorderBrush="#FF424242" Foreground="#FF9A9A9A" MouseEnter="password_Enter" MouseLeave="password_Leave" Password="password"/>
                </Border>
                <Button Content="SignIn" HorizontalAlignment="Stretch" Height="30" Margin="25,40,25,0" VerticalAlignment="Stretch"  Style="{DynamicResource ButtonStyle1}" Click="Button_Click" BorderBrush="#FF636363"/>

            </StackPanel>
        </Grid>
        <Grid x:Name="GridSignUP" Grid.Column="2" Grid.Row="2" Background="#FFD9D9D9" Margin="0" ScrollViewer.VerticalScrollBarVisibility="Disabled" Visibility="Hidden">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="18" Direction="0" ShadowDepth="0" Color="#FFBDBDBD"/>
            </Grid.Effect>
            <StackPanel  VerticalAlignment="Center" >
                <StackPanel Orientation="Horizontal" Margin="20" >
                    <Button x:Name="signin1" Content="Button" HorizontalAlignment="Left" Height="auto" VerticalAlignment="Top" Width="59" Style="{DynamicResource ButtonStyleSignIn}" Click="signin_Click" Foreground="{x:Null}" BorderBrush="{x:Null}" Opacity="0.3" FontSize="16">
                        <Button.Resources>
                            <Style x:Key="ButtonStyleSignIn" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border  VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Label Content="SignIn" Foreground="#FF155D10"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true"/>
                                                <Trigger Property="IsMouseOver" Value="true"/>
                                                <Trigger Property="IsPressed" Value="true"/>
                                                <Trigger Property="IsEnabled" Value="false"/>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button x:Name="signUp1" Content="Button" HorizontalAlignment="Left" Height="auto" VerticalAlignment="Top" Width="auto" Style="{DynamicResource ButtonStyleSignIn}" Click="signUp1_Click" FontSize="16" FontWeight="Bold">
                        <Button.Resources>
                            <Style x:Key="ButtonStyleSignIn" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border  VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Label Content="SignUp" FontWeight="DemiBold" Foreground="#FFFEBC48"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true"/>
                                                <Trigger Property="IsMouseOver" Value="true"/>
                                                <Trigger Property="IsPressed" Value="true"/>
                                                <Trigger Property="IsEnabled" Value="false"/>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
                <Border BorderThickness="1" Height="31" Margin="25,0,25,9" CornerRadius="8" VerticalAlignment="Center" Padding="8,0,5,0" >
                    <Border.BorderBrush>
                        <RadialGradientBrush>
                            <GradientStop Color="#FF558A52" Offset="1"/>
                            <GradientStop Color="#FFF0F0F6"/>
                        </RadialGradientBrush>
                    </Border.BorderBrush>
                    <TextBox x:Name="email" HorizontalAlignment="Stretch"  TextWrapping="Wrap" Text="username" VerticalAlignment="Center" Width="auto" Background="{x:Null}" BorderThickness="0" BorderBrush="#FF424242" SpellCheck.IsEnabled="True" Style="{DynamicResource TextBoxStyle1}"/>
                </Border>

                <Border BorderThickness="1" Height="30" Margin="25,10,25,9" CornerRadius="8" VerticalAlignment="Center" Padding="8,0,5,0" >
                    <Border.BorderBrush>
                        <RadialGradientBrush>
                            <GradientStop Color="#FF558A52" Offset="1"/>
                            <GradientStop Color="#FFF0F0F6"/>
                        </RadialGradientBrush>
                    </Border.BorderBrush>
                    <TextBox x:Name="password" HorizontalAlignment="Stretch"  TextWrapping="Wrap" Text="password" VerticalAlignment="Center" Width="auto" Background="{x:Null}" BorderThickness="0" BorderBrush="#FF424242"/>
                </Border>
                <Border BorderThickness="1" Height="30" Margin="25,10,25,9" VerticalAlignment="Center" Padding="8,0,5,0" Background="#FFEBEBEB" >
                    <Border.BorderBrush>
                        <RadialGradientBrush>
                            <GradientStop Color="#FF558A52" Offset="1"/>
                            <GradientStop Color="#FFF0F0F6"/>
                        </RadialGradientBrush>
                    </Border.BorderBrush>
                    <ComboBox x:Name="combo" Padding="6,3,5,3" Margin="-8.8,0.2,-6.8,0">
                        <ComboBoxItem Content="IFI" HorizontalAlignment="Left" Width="176"/>
                        <ComboBoxItem Content="SREDA" HorizontalAlignment="Left" Width="176"/>
                    </ComboBox>
                </Border>
                <Button Content="SignUp" HorizontalAlignment="Stretch" Height="30" Margin="25,40,25,0" VerticalAlignment="Stretch"  Style="{DynamicResource ButtonStyle1}" Click="signUP"/>
            </StackPanel>
        </Grid>
        <Grid Grid.ColumnSpan="2" Grid.Column="1"  Grid.Row="1" Background="#FF313942" />
    </Grid>
</Window>
